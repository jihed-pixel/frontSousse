{"ast":null,"code":"import apiMedicalService from \"./apiMedicalService\";\nexport const ACTION_TYPES = {\n  LOGIN: \"LOGIN\",\n  SIGNUP: \"SIGNUP\",\n  LOGINADMIN: \"LOGINADMIN\",\n  LOGOUT: \"LOGOUT\",\n  ADD_PATIENT: \"ADD_PATIENT\",\n  ALL_PATIENT: \"ALL_PATIENT\",\n  SEARCH_PATIENT: \"SEARCH_PATIENT\",\n  SEARCH_PATIENT1: \"SEARCH_PATIENT1\",\n  ADD_PATIENT: \"ADD_PATIENT\",\n  HABITUDES_DE_VIE_PATIENT: \"HABITUDES_DE_VIE_PATIENT\",\n  INFOS_GENERALES: \"INFOS_GENERALES\",\n  ANTECEDENTS_MEDICAUX: \"ANTECEDENTS_MEDICAUX\",\n  GET_ALL_ANTECEDENTS_MEDICAUX: \"GET_ALL_ANTECEDENTS_MEDICAUX\",\n  REMOVE_ANTECEDENT_MEDICAL: \"REMOVE_ANTECEDENT_MEDICAL\",\n  ADD_DIAGNOSTIC: \"ADD_DIAGNOSTIC\",\n  ADD_EXPOSITION: \"ADD_EXPOSITION\",\n  ADD_EXPOSITION1: \"ADD_EXPOSITION1\",\n  GET_ALL_DIAGNOSTICS: \"GET_ALL_DIAGNOSTICS\",\n  SEARCH_DIAGNOSTIC: \"SEARCH_DIAGNOSTIC\",\n  REMOVE_ANTECEDENT_MEDICAL: \"REMOVE_ANTECEDENT_MEDICAL\",\n  REMOVE_P_EXPO_RISQUE: \"REMOVE_P_EXPO_RISQUE\",\n  REMOVE_P_ANTECEDENT_MEDICAL: \"REMOVE_P_ANTECEDENT_MEDICAL\",\n  REMOVE_P_INFOS_GENERALES: \"REMOVE_P_INFOSGENERALES\",\n  REMOVE_P_HABITUDES_DE_VIE: \"REMOVE_P_HABITUDES_DE_VIE\",\n  REMOVE_P_CONF_DIAGS: \"REMOVE_P_CONF_DIAGS\",\n  REMOVE_P_EXAM_BIO: \"REMOVE_P_EXAM_BIO\",\n  REMOVE_P_CARAC_CLINIQUES: \"REMOVE_P_CARAC_CLINIQUES\",\n  REMOVE_P_ADMISSIONS: \"REMOVE_P_ADMISSIONS\",\n  REMOVE_P_EXAMEN_CLI: \"REMOVE_P_EXAMEN_CLI\",\n  REMOVE_P_EXAM_RADIO_PARA_CLI: \"REMOVE_P_EXAM_RADIO_PARA_CLI\",\n  REMOVE_P_TRAITEMENT: \"REMOVE_P_TRAITEMENT\",\n  REMOVE_P_EVOLUATION_QUO: \"REMOVE_P_EVOLUATION_QUO\",\n  REMOVE_P_EVALUATION_FINALE: \"REMOVE_P_EVALUATION_FINALE\",\n  DEL_ONE_EXAMEN_BIO: \"DEL_ONE_EXAMEN_BIO\",\n  DEL_ONE_EXAMEN_RADIO: \"DEL_ONE_EXAMEN_RADIO\",\n  DEL_ONE_CONF_DIAG: \"DEL_ONE_CONF_DIAG\",\n  ADD_CONF_DIAG: \"ADD_CONF_DIAG\",\n  ADD_ADMISSION: \"ADD_ADMISSION\",\n  ADD_CARAC_CLINIQUES: \"ADD_CARAC_CLINIQUES\",\n  ADD_EXAM_CLI: \"ADD_EXAM_CLI\",\n  ADD_EXAM_RADIO_PARA_CLI: \"ADD_EXAM_RADIO_PARA_CLI\",\n  ADD_EVALUATION_FINALE: \"ADD_EVALUATION_FINALE\",\n  ADD_EXAM_BIO: \"ADD_EXAM_BIO\",\n  ADD_TRAITMENT: \"ADD_TRAITMENT\",\n  GET_TRAITMENT: \"GET_TRAITMENT\",\n  ADD_EVOLUTION: \"ADD_EVOLUTION\",\n  GET_EVOLUTION: \"GET_EVOLUTION\"\n};\nexport const removeAntecedentMedical = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().removeAntecedentMedical(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_ANTECEDENT_MEDICAL,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepExpoRisque = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().removepExpoRisque(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_EXPO_RISQUE,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepAntecedentMedical = cin => dispatch => {\n  apiMedicalService.medicalService().removepAntecedentMedical(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_ANTECEDENT_MEDICAL,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepInfosGenerales = cin => dispatch => {\n  apiMedicalService.medicalService().removepInfosGenerales(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_INFOS_GENERALES,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepHabitudesDeVie = cin => dispatch => {\n  apiMedicalService.medicalService().removepHabitudesDeVie(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_HABITUDES_DE_VIE,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepConfDiags = cin => dispatch => {\n  apiMedicalService.medicalService().removepConfDiags(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_CONF_DIAGS,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepExamBio = cin => dispatch => {\n  apiMedicalService.medicalService().removepExamBio(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_EXAM_BIO,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepCaracCliniques = cin => dispatch => {\n  apiMedicalService.medicalService().removepCaracCliniques(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_CARAC_CLINIQUES,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepAdmissions = cin => dispatch => {\n  apiMedicalService.medicalService().removepAdmissions(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_ADMISSIONS,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepExamenCli = cin => dispatch => {\n  apiMedicalService.medicalService().removepExamenCli(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_EXAMEN_CLI,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepExamRadio_ParaCli = cin => dispatch => {\n  apiMedicalService.medicalService().removepExamRadio_ParaCli(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_EXAM_RADIO_PARA_CLI,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepTraitement = cin => dispatch => {\n  apiMedicalService.medicalService().removepTraitement(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_TRAITEMENT,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepEvoluationQuo = cin => dispatch => {\n  apiMedicalService.medicalService().removepEvoluationQuo(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_EVOLUATION_QUO,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepEvaluationFinale = cin => dispatch => {\n  apiMedicalService.medicalService().removepEvaluationFinale(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_EVALUATION_FINALE,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const delOneExamenBio = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().delOneExamenBio(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.DEL_ONE_EXAMEN_BIO,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const delOneExamenRadioParacli = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().delOneExamenRadioParacli(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.DEL_ONE_EXAMEN_RADIO,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const delOneConfDiag = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().delOneConfDiag(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.DEL_ONE_CONF_DIAG,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const getEvolution = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().getEvolution(cin, values).then(resposne => {\n    dispatch({\n      type: ACTION_TYPES.GET_EVOLUTION,\n      payload: resposne.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const addEvolution = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addEvolution(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_EVOLUTION,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const getTraitment = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().getTraitment(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.GET_TRAITMENT,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const addTraitment = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addTraitment(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_TRAITMENT,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const addExamBio = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addExamBio(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_EXAM_BIO,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const addEvaluationFinale = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addEvaluationFinale(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_EVALUATION_FINALE,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const addExamRadioParaCli = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addExamRadioParaCli(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_EXAM_RADIO_PARA_CLI,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const addExamCli = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addExamCli(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_EXAM_CLI,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const addCaracCliniques = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addCracCliniques(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_CARAC_CLINIQUES,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const addAdmission = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addAdmission(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_ADMISSION,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const addConfDiag = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addConfDiag(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_CONF_DIAG,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const searchDiagnostic = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().searchDiagnostic(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.SEARCH_DIAGNOSTIC,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const getAllDiagnostics = cin => dispatch => {\n  apiMedicalService.medicalService().getAllDiagnostics(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.GET_ALL_DIAGNOSTICS,\n      payload: response.data\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const addExposition = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addExposition(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_EXPOSITION,\n      payload: response.data\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const addExposition1 = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addExposition1(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_EXPOSITION1,\n      payload: response.data\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const addDiagnostic = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addDiagnostic(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_DIAGNOSTIC,\n      payload: response.data\n    });\n    console.log(response.data);\n    if (response.data == \"You have already added a diagnostic in the same day\") localStorage.setItem(\"addDiagnostic\", response.data);else localStorage.setItem(\"addDiagnostic\", JSON.stringify(null));\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const getAllAntecedentsMedicaux = cin => dispatch => {\n  apiMedicalService.medicalService().allAntecedentsMedicaux(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.GET_ALL_ANTECEDENTS_MEDICAUX,\n      payload: response.data\n    });\n    console.log(response.data);\n  }).catch(err => console.log(err));\n};\nexport const antecedentsMedicaux = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().antecedentsMedicaux(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ANTECEDENTS_MEDICAUX,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const infosGenerales = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().infosGenerales(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.INFOS_GENERALES,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const habitudesDeViePatient = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().habitudesDeViePatient(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.HABITUDES_DE_VIE_PATIENT,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const signup = values => dispatch => {\n  apiMedicalService.medicalService().signup(values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.SIGNUP,\n      payload: response.data\n    });\n    localStorage.setItem(\"loggedUser1\", response.data);\n  }).catch(err => console.log(err));\n};\nexport const searchPatient = (search, search1) => dispatch => {\n  apiMedicalService.medicalService().searchPatient(search, search1).then(response => {\n    dispatch({\n      type: ACTION_TYPES.SEARCH_PATIENT,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const searchPatient1 = search => dispatch => {\n  apiMedicalService.medicalService().searchPatient1(search).then(response => {\n    dispatch({\n      type: ACTION_TYPES.SEARCH_PATIENT1,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const allPatient = () => dispatch => {\n  apiMedicalService.medicalService().allPatient().then(response => {\n    dispatch({\n      type: ACTION_TYPES.ALL_PATIENT,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const login = values => dispatch => {\n  apiMedicalService.medicalService().login(values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.LOGIN,\n      payload: response.data\n    });\n    const loggedUser = response.data;\n\n    if (loggedUser == \"\") {\n      localStorage.setItem(\"loggedUser\", JSON.stringify(null));\n    } else if (loggedUser == \"Username or/and password is/are incorrect\") {\n      localStorage.setItem(\"loggedUser\", JSON.stringify(null));\n    } else {\n      localStorage.setItem(\"loggedUser\", JSON.stringify(loggedUser));\n    }\n  }).catch(err => console.log(err));\n};\nexport const loginAdmin = values => dispatch => {\n  apiMedicalService.medicalService().loginAdmin(values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.LOGINADMIN,\n      payload: response.data\n    });\n    const loggedUserAdmin = response.data;\n\n    if (loggedUserAdmin == \"\") {\n      localStorage.setItem(\"loggedUserAdmin\", JSON.stringify(null));\n    } else if (loggedUserAdmin == \"Username or/and password is/are incorrect\") {\n      localStorage.setItem(\"loggedUserAdmin\", JSON.stringify(null));\n    } else {\n      localStorage.setItem(\"loggedUserAdmin\", JSON.stringify(loggedUserAdmin));\n    }\n  }).catch(err => console.log(err));\n};\nexport const logout = () => dispatch => {\n  apiMedicalService.medicalService().logout().then(response => {\n    localStorage.setItem(\"loggedUser\", JSON.stringify(\"Try to login\"));\n    dispatch({\n      type: ACTION_TYPES.LOGOUT,\n      payload: JSON.stringify(null)\n    });\n  }).catch(err => console.log(err));\n};\nexport const addPatient = values => dispatch => {\n  apiMedicalService.medicalService().addPatient(values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_PATIENT,\n      payload: response.data\n    });\n    const addPatientMessage = response.data;\n    if (addPatientMessage == \"Cin or/and matricule already existed\") localStorage.setItem(\"addPatientMessage\", \"Cin or/and matricule already existed\");else {\n      localStorage.setItem(\"addPatientMessage\", JSON.stringify(null));\n    }\n    ;\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/home/yobi/Desktop/projects/souseFront/src/Actions/medicalService.js"],"names":["apiMedicalService","ACTION_TYPES","LOGIN","SIGNUP","LOGINADMIN","LOGOUT","ADD_PATIENT","ALL_PATIENT","SEARCH_PATIENT","SEARCH_PATIENT1","HABITUDES_DE_VIE_PATIENT","INFOS_GENERALES","ANTECEDENTS_MEDICAUX","GET_ALL_ANTECEDENTS_MEDICAUX","REMOVE_ANTECEDENT_MEDICAL","ADD_DIAGNOSTIC","ADD_EXPOSITION","ADD_EXPOSITION1","GET_ALL_DIAGNOSTICS","SEARCH_DIAGNOSTIC","REMOVE_P_EXPO_RISQUE","REMOVE_P_ANTECEDENT_MEDICAL","REMOVE_P_INFOS_GENERALES","REMOVE_P_HABITUDES_DE_VIE","REMOVE_P_CONF_DIAGS","REMOVE_P_EXAM_BIO","REMOVE_P_CARAC_CLINIQUES","REMOVE_P_ADMISSIONS","REMOVE_P_EXAMEN_CLI","REMOVE_P_EXAM_RADIO_PARA_CLI","REMOVE_P_TRAITEMENT","REMOVE_P_EVOLUATION_QUO","REMOVE_P_EVALUATION_FINALE","DEL_ONE_EXAMEN_BIO","DEL_ONE_EXAMEN_RADIO","DEL_ONE_CONF_DIAG","ADD_CONF_DIAG","ADD_ADMISSION","ADD_CARAC_CLINIQUES","ADD_EXAM_CLI","ADD_EXAM_RADIO_PARA_CLI","ADD_EVALUATION_FINALE","ADD_EXAM_BIO","ADD_TRAITMENT","GET_TRAITMENT","ADD_EVOLUTION","GET_EVOLUTION","removeAntecedentMedical","cin","values","dispatch","medicalService","then","response","type","payload","data","catch","err","console","log","removepExpoRisque","removepAntecedentMedical","removepInfosGenerales","removepHabitudesDeVie","removepConfDiags","removepExamBio","removepCaracCliniques","removepAdmissions","removepExamenCli","removepExamRadio_ParaCli","removepTraitement","removepEvoluationQuo","removepEvaluationFinale","delOneExamenBio","delOneExamenRadioParacli","delOneConfDiag","getEvolution","resposne","addEvolution","getTraitment","addTraitment","addExamBio","addEvaluationFinale","addExamRadioParaCli","addExamCli","addCaracCliniques","addCracCliniques","addAdmission","addConfDiag","searchDiagnostic","getAllDiagnostics","addExposition","addExposition1","addDiagnostic","localStorage","setItem","JSON","stringify","getAllAntecedentsMedicaux","allAntecedentsMedicaux","antecedentsMedicaux","infosGenerales","habitudesDeViePatient","signup","searchPatient","search","search1","searchPatient1","allPatient","login","loggedUser","loginAdmin","loggedUserAdmin","logout","addPatient","addPatientMessage"],"mappings":"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","sourcesContent":["import apiMedicalService from \"./apiMedicalService\";\n\nexport const ACTION_TYPES = {\n  LOGIN: \"LOGIN\",\n  SIGNUP: \"SIGNUP\",\n  LOGINADMIN: \"LOGINADMIN\",\n  LOGOUT: \"LOGOUT\",\n  ADD_PATIENT: \"ADD_PATIENT\",\n  ALL_PATIENT:\"ALL_PATIENT\",\n  SEARCH_PATIENT: \"SEARCH_PATIENT\",\n  SEARCH_PATIENT1:\"SEARCH_PATIENT1\",\n  ADD_PATIENT:\"ADD_PATIENT\",\n  HABITUDES_DE_VIE_PATIENT: \"HABITUDES_DE_VIE_PATIENT\",\n  INFOS_GENERALES: \"INFOS_GENERALES\",\n  ANTECEDENTS_MEDICAUX: \"ANTECEDENTS_MEDICAUX\",\n  GET_ALL_ANTECEDENTS_MEDICAUX: \"GET_ALL_ANTECEDENTS_MEDICAUX\",\n  REMOVE_ANTECEDENT_MEDICAL: \"REMOVE_ANTECEDENT_MEDICAL\",\n  ADD_DIAGNOSTIC: \"ADD_DIAGNOSTIC\",\n  ADD_EXPOSITION: \"ADD_EXPOSITION\",\n  ADD_EXPOSITION1: \"ADD_EXPOSITION1\",\n  GET_ALL_DIAGNOSTICS: \"GET_ALL_DIAGNOSTICS\",\n  SEARCH_DIAGNOSTIC: \"SEARCH_DIAGNOSTIC\",\n  REMOVE_ANTECEDENT_MEDICAL: \"REMOVE_ANTECEDENT_MEDICAL\",\n  REMOVE_P_EXPO_RISQUE:\"REMOVE_P_EXPO_RISQUE\",\n  REMOVE_P_ANTECEDENT_MEDICAL: \"REMOVE_P_ANTECEDENT_MEDICAL\",\n  REMOVE_P_INFOS_GENERALES:\"REMOVE_P_INFOSGENERALES\",\n  REMOVE_P_HABITUDES_DE_VIE:\"REMOVE_P_HABITUDES_DE_VIE\",\n  REMOVE_P_CONF_DIAGS:\"REMOVE_P_CONF_DIAGS\",\n  REMOVE_P_EXAM_BIO:\"REMOVE_P_EXAM_BIO\",\n  REMOVE_P_CARAC_CLINIQUES:\"REMOVE_P_CARAC_CLINIQUES\",\n  REMOVE_P_ADMISSIONS:\"REMOVE_P_ADMISSIONS\",\n  REMOVE_P_EXAMEN_CLI:\"REMOVE_P_EXAMEN_CLI\",\n  REMOVE_P_EXAM_RADIO_PARA_CLI:\"REMOVE_P_EXAM_RADIO_PARA_CLI\",\n  REMOVE_P_TRAITEMENT:\"REMOVE_P_TRAITEMENT\",\n  REMOVE_P_EVOLUATION_QUO:\"REMOVE_P_EVOLUATION_QUO\",\n  REMOVE_P_EVALUATION_FINALE:\"REMOVE_P_EVALUATION_FINALE\",\n  DEL_ONE_EXAMEN_BIO:\"DEL_ONE_EXAMEN_BIO\",\n  DEL_ONE_EXAMEN_RADIO:\"DEL_ONE_EXAMEN_RADIO\",\n  DEL_ONE_CONF_DIAG:\"DEL_ONE_CONF_DIAG\",\n  ADD_CONF_DIAG: \"ADD_CONF_DIAG\",\n  ADD_ADMISSION: \"ADD_ADMISSION\",\n  ADD_CARAC_CLINIQUES: \"ADD_CARAC_CLINIQUES\",\n  ADD_EXAM_CLI: \"ADD_EXAM_CLI\",\n  ADD_EXAM_RADIO_PARA_CLI: \"ADD_EXAM_RADIO_PARA_CLI\",\n  ADD_EVALUATION_FINALE: \"ADD_EVALUATION_FINALE\",\n  ADD_EXAM_BIO: \"ADD_EXAM_BIO\",\n  ADD_TRAITMENT:\"ADD_TRAITMENT\",\n  GET_TRAITMENT:\"GET_TRAITMENT\",\n  ADD_EVOLUTION:\"ADD_EVOLUTION\",\n  GET_EVOLUTION:\"GET_EVOLUTION\"\n};\n\nexport const removeAntecedentMedical = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removeAntecedentMedical(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_ANTECEDENT_MEDICAL,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepExpoRisque = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepExpoRisque(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_EXPO_RISQUE,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepAntecedentMedical = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepAntecedentMedical(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_ANTECEDENT_MEDICAL,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepInfosGenerales = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepInfosGenerales(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_INFOS_GENERALES,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepHabitudesDeVie = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepHabitudesDeVie(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_HABITUDES_DE_VIE,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepConfDiags = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepConfDiags(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_CONF_DIAGS,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepExamBio = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepExamBio(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_EXAM_BIO,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepCaracCliniques = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepCaracCliniques(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_CARAC_CLINIQUES,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepAdmissions = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepAdmissions(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_ADMISSIONS,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepExamenCli = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepExamenCli(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_EXAMEN_CLI,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepExamRadio_ParaCli = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepExamRadio_ParaCli(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_EXAM_RADIO_PARA_CLI,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepTraitement = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepTraitement(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_TRAITEMENT,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepEvoluationQuo = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepEvoluationQuo(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_EVOLUATION_QUO,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepEvaluationFinale = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepEvaluationFinale(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_EVALUATION_FINALE,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const delOneExamenBio = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .delOneExamenBio(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.DEL_ONE_EXAMEN_BIO,\n        payload: response.data\n\n      })\n    })\n    .catch(err => console.log(err))\n}\nexport const delOneExamenRadioParacli = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .delOneExamenRadioParacli(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.DEL_ONE_EXAMEN_RADIO,\n        payload: response.data\n\n      })\n    })\n    .catch(err => console.log(err))\n}\nexport const delOneConfDiag = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .delOneConfDiag(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.DEL_ONE_CONF_DIAG,\n        payload: response.data\n\n      })\n    })\n    .catch(err => console.log(err))\n}\nexport const getEvolution=(cin,values)=>(dispatch)=>{\n  apiMedicalService\n  .medicalService()\n  .getEvolution(cin,values)\n . then(resposne=>{\n    dispatch({\n      type:ACTION_TYPES.GET_EVOLUTION,\n      payload:resposne.data\n    })\n  })\n  .catch(err=>console.log(err))\n}\n\nexport const addEvolution=(cin,values)=>(dispatch)=>{\n  apiMedicalService\n  .medicalService()\n  .addEvolution(cin,values)\n  .then((response)=>{\n    dispatch({\n      type:ACTION_TYPES.ADD_EVOLUTION,\n      payload:response.data\n    })\n  })\n  .catch(err=>console.log(err))\n}\n\nexport const getTraitment=(cin,values)=>(dispatch)=>{\n  apiMedicalService\n  .medicalService()\n  .getTraitment(cin,values)\n  .then((response)=>{\n    dispatch({\n      type:ACTION_TYPES.GET_TRAITMENT,\n      payload:response.data\n    })\n  })\n  .catch(err=>console.log(err))\n}\n\nexport const addTraitment=(cin,values)=>(dispatch)=>{\n  apiMedicalService\n  .medicalService()\n  .addTraitment(cin,values)\n  .then((response)=>{\n    dispatch({\n      type:ACTION_TYPES.ADD_TRAITMENT,\n      payload:response.data\n    })\n  })\n  .catch(err=>console.log(err))\n}\n\nexport const addExamBio = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addExamBio(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_EXAM_BIO,\n        payload: response.data\n\n      })\n    })\n    .catch(err=>console.log(err))\n\n}\nexport const addEvaluationFinale = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addEvaluationFinale(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_EVALUATION_FINALE,\n        payload: response.data\n      })\n    })\n    .catch(err => console.log(err))\n\n}\n\nexport const addExamRadioParaCli = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addExamRadioParaCli(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_EXAM_RADIO_PARA_CLI,\n        payload: response.data\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const addExamCli = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addExamCli(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_EXAM_CLI,\n        payload: response.data\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const addCaracCliniques = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addCracCliniques(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_CARAC_CLINIQUES,\n        payload: response.data\n\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const addAdmission = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addAdmission(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_ADMISSION,\n        payload: response.data\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const addConfDiag = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addConfDiag(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_CONF_DIAG,\n        payload: response.data\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const searchDiagnostic = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .searchDiagnostic(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.SEARCH_DIAGNOSTIC,\n        payload: response.data\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const getAllDiagnostics = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .getAllDiagnostics(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.GET_ALL_DIAGNOSTICS,\n        payload: response.data\n      })\n    })\n    .catch(err => { console.log(err) })\n}\n\nexport const addExposition = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addExposition(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_EXPOSITION,\n        payload: response.data\n      })\n    })\n    .catch(err => { console.log(err) })\n}\n\nexport const addExposition1 = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addExposition1(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_EXPOSITION1,\n        payload: response.data\n      })\n    })\n    .catch(err => { console.log(err) })\n}\n\nexport const addDiagnostic = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addDiagnostic(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_DIAGNOSTIC,\n        payload: response.data\n      })\n      console.log(response.data)\n      if (response.data == \"You have already added a diagnostic in the same day\")\n        localStorage.setItem(\"addDiagnostic\", response.data)\n      else localStorage.setItem(\"addDiagnostic\", JSON.stringify(null))\n\n    })\n    .catch((err) => { console.log(err) })\n}\n\n\nexport const getAllAntecedentsMedicaux = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .allAntecedentsMedicaux(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.GET_ALL_ANTECEDENTS_MEDICAUX,\n        payload: response.data\n      })\n      console.log(response.data)\n    }\n    )\n    .catch((err) => console.log(err))\n}\nexport const antecedentsMedicaux = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .antecedentsMedicaux(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ANTECEDENTS_MEDICAUX,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\n\nexport const infosGenerales = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .infosGenerales(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.INFOS_GENERALES,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const habitudesDeViePatient = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .habitudesDeViePatient(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.HABITUDES_DE_VIE_PATIENT,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const signup = (values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .signup(values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.SIGNUP,\n        payload: response.data,\n      });\n      \n      localStorage.setItem(\"loggedUser1\",response.data )\n     \n    })\n    .catch((err) => console.log(err));\n};\nexport const searchPatient = (search,search1) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .searchPatient(search,search1)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.SEARCH_PATIENT,\n        payload: response.data\n      });\n\n    })\n    .catch((err) => console.log(err))\n}\nexport const searchPatient1 = (search) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .searchPatient1(search)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.SEARCH_PATIENT1,\n        payload: response.data\n      });\n\n    })\n    .catch((err) => console.log(err))\n}\nexport const allPatient = () => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .allPatient()\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ALL_PATIENT,\n        payload: response.data\n      });\n\n    })\n    .catch((err) => console.log(err))\n}\nexport const login = (values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .login(values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.LOGIN,\n        payload: response.data,\n      });\n      const loggedUser = response.data;\n      if (loggedUser == \"\") {\n        localStorage.setItem(\"loggedUser\", JSON.stringify(null))\n      } else if (loggedUser == \"Username or/and password is/are incorrect\") {\n        localStorage.setItem(\"loggedUser\", JSON.stringify(null))\n\n      } else {\n        localStorage.setItem(\"loggedUser\", JSON.stringify(loggedUser))\n\n\n      }\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const loginAdmin = (values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .loginAdmin(values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.LOGINADMIN,\n        payload: response.data,\n      });\n      const loggedUserAdmin = response.data;\n      if (loggedUserAdmin == \"\") {\n        localStorage.setItem(\"loggedUserAdmin\", JSON.stringify(null))\n      } else if (loggedUserAdmin == \"Username or/and password is/are incorrect\") {\n        localStorage.setItem(\"loggedUserAdmin\", JSON.stringify(null))\n\n      } else {\n        localStorage.setItem(\"loggedUserAdmin\", JSON.stringify(loggedUserAdmin))\n\n\n      }\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const logout = () => (dispatch) => {\n  apiMedicalService.medicalService().logout().\n    then((response) => {\n      localStorage.setItem(\"loggedUser\", JSON.stringify(\"Try to login\"))\n      dispatch({\n        type: ACTION_TYPES.LOGOUT,\n        payload: JSON.stringify(null)\n      });\n\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const addPatient = (values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addPatient(values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_PATIENT,\n        payload: response.data,\n      });\n      const addPatientMessage = response.data\n      if (addPatientMessage == \"Cin or/and matricule already existed\")\n        localStorage.setItem(\"addPatientMessage\", \"Cin or/and matricule already existed\")\n      else {\n        localStorage.setItem(\"addPatientMessage\", JSON.stringify(null))\n\n      };\n\n    })\n    .catch((err) => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}